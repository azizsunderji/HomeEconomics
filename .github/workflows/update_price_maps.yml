name: Update Price Maps

on:
  schedule:
    # Run daily at 9 AM EST (2 PM UTC)
    - cron: '0 14 * * *'
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write
  issues: write

jobs:
  check-and-update:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        persist-credentials: true

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-pricemaps-${{ hashFiles('PriceMaps/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-pricemaps-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas numpy geopandas requests

    - name: Check for updates
      id: check
      working-directory: PriceMaps
      run: |
        # Run check and capture output
        OUTPUT=$(python scripts/check_for_updates.py)
        echo "$OUTPUT"

        # Set output based on result
        if echo "$OUTPUT" | grep -q "NEW_DATA=true"; then
          echo "new_data=true" >> $GITHUB_OUTPUT
          echo "Setting new_data=true"
        else
          echo "new_data=false" >> $GITHUB_OUTPUT
          echo "Setting new_data=false"
        fi

    - name: Download new data
      if: steps.check.outputs.new_data == 'true'
      working-directory: PriceMaps
      run: |
        python scripts/download_data.py

    - name: Generate price levels map
      if: steps.check.outputs.new_data == 'true'
      working-directory: PriceMaps
      run: |
        python scripts/create_price_levels_original.py

    - name: Generate YoY map
      if: steps.check.outputs.new_data == 'true'
      working-directory: PriceMaps
      run: |
        python scripts/create_yoy_map_original.py

    - name: Commit and push changes
      if: steps.check.outputs.new_data == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        # Get the date from the data
        DATE=$(python -c "import pandas as pd; df=pd.read_csv('PriceMaps/data/ZillowZip.csv'); cols=[c for c in df.columns if '-' in c]; print(cols[-1] if cols else 'unknown')")

        # Force add the output files even if gitignored
        git add -f PriceMaps/output/*.html
        git add -f PriceMaps/data/last_update.json
        git commit -m "Update price maps with data from $DATE" || echo "No changes to commit"
        git push

    - name: Install lftp
      if: steps.check.outputs.new_data == 'true'
      run: sudo apt-get update && sudo apt-get install -y lftp

    - name: Deploy to Server via SFTP
      if: steps.check.outputs.new_data == 'true'
      env:
        HOST: ${{ secrets.SFTP_HOST }}
        USER: ${{ secrets.SFTP_USER }}
        KEY: ${{ secrets.SFTP_KEY }}
        REMOTE_BASE: ${{ secrets.REMOTE_BASE }}
      run: |
        # Set up SSH key
        mkdir -p ~/.ssh
        echo "$KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $HOST >> ~/.ssh/known_hosts 2>/dev/null || true

        # Upload maps to server
        lftp -e "
          set sftp:auto-confirm yes;
          set sftp:connect-program 'ssh -i ~/.ssh/id_rsa';
          set net:max-retries 3;
          set net:timeout 60;
          open -u $USER,dummy sftp://$HOST;
          mkdir -p ${REMOTE_BASE}/live/PriceMaps;
          put PriceMaps/output/us_price_levels_with_search.html -o ${REMOTE_BASE}/live/PriceMaps/us_price_levels_with_search.html;
          put PriceMaps/output/us_yoy_price_map_with_search.html -o ${REMOTE_BASE}/live/PriceMaps/us_yoy_price_map_with_search.html;
          bye
        " || echo "Upload finished with warnings"

        echo "‚úÖ Maps deployed to server at $SERVER_PATH"
        echo "URLs:"
        echo "  - https://home-economics.us/wp-content/uploads/reports/live/PriceMaps/us_price_levels_with_search.html"
        echo "  - https://home-economics.us/wp-content/uploads/reports/live/PriceMaps/us_yoy_price_map_with_search.html"

    - name: Create GitHub Issue for new data
      if: steps.check.outputs.new_data == 'true'
      run: |
        # Get the date from the data
        DATE=$(python -c "import pandas as pd; df=pd.read_csv('PriceMaps/data/ZillowZip.csv'); cols=[c for c in df.columns if '-' in c]; print(cols[-1] if cols else 'unknown')")

        # Create issue with gh CLI
        gh issue create \
          --title "üó∫Ô∏è Price Maps Updated - Data from $DATE" \
          --body "## New Price Map Data Available

**Data Date:** $DATE
**Updated:** $(date '+%Y-%m-%d %H:%M:%S %Z')
**Workflow Run:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

### Updated Maps
- [Price Levels Map](https://home-economics.us/wp-content/uploads/reports/live/PriceMaps/us_price_levels_with_search.html)
- [Year-over-Year Map](https://home-economics.us/wp-content/uploads/reports/live/PriceMaps/us_yoy_price_map_with_search.html)

### Actions Taken
‚úÖ Downloaded new Zillow data
‚úÖ Generated price levels map
‚úÖ Generated YoY price change map
‚úÖ Deployed to server
‚úÖ Committed to repository

---
*This issue was automatically created by the [Update Price Maps workflow](${{ github.server_url }}/${{ github.repository }}/blob/main/.github/workflows/update_price_maps.yml)*" \
          --label "automated,price-maps,data-update"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}