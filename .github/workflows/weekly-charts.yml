name: Weekly Housing Market Data

on:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * 3'  # every Wednesday at 6am UTC

jobs:
  download-data:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas pyarrow

      - name: Download Redfin data
        run: |
          mkdir -p data
          wget -O data/weekly_housing_market_data.parquet \
            https://redfin-public-data-url/path/to/weekly_housing_market_data.parquet

      - uses: actions/upload-artifact@v4
        with:
          name: redfin-data
          path: data/weekly_housing_market_data.parquet
          retention-days: 1

      - name: Inspect Redfin parquet max date
        run: |
          python - << 'PY'
import glob, pandas as pd

paths = sorted(
    glob.glob("out/data/**/*.parquet", recursive=True)
    + glob.glob("data/**/*.parquet", recursive=True)
)

def max_date(df):
    for c in ("period_end", "date", "week_end", "week_date", "period"):
        if c in df.columns:
            return pd.to_datetime(df[c]).max()

for p in paths:
    try:
        df = pd.read_parquet(p)
        md = max_date(df)
        if md is not None:
            print(f"{p} => max={md.date()} rows={len(df)}")
    except Exception as e:
        print(f"Skip {p}: {e}")
PY

  generate-charts:
    needs: download-data
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas pyarrow matplotlib seaborn

      - uses: actions/download-artifact@v4
        with:
          name: redfin-data
          path: data

      - name: Generate charts
        run: |
          python scripts/generate_charts.py data/weekly_housing_market_data.parquet

      - uses: actions/upload-artifact@v4
        with:
          name: charts
          path: charts
          retention-days: 7
